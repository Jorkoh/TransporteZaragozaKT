apply plugin: 'com.android.library'

android {
    compileSdkVersion buildConfig.compileSdk
    resourcePrefix 'mis_'

    defaultConfig {
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            defaultPublishConfig "debug"
        }

        android.libraryVariants.all { variant ->
            project.task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
                doFirst {
                    title = "Documentation for Android $project.android.defaultConfig.versionName v$project.android.defaultConfig.versionCode"
                    description = "Generates Javadoc for $variant.name."
                    group = 'Documentation'

                    destinationDir = new File("${project.getProjectDir()}/javaDoc/", variant.baseName)
                    source = variant.javaCompile.source

                    ext.androidJar = "${project.android.sdkDirectory}/platforms/${project.android.compileSdkVersion}/android.jar"
                    classpath = project.files(variant.javaCompile.classpath.files) + project.files(ext.androidJar)

                    options.memberLevel = JavadocMemberLevel.PROTECTED
                    options.links("http://docs.oracle.com/javase/7/docs/api/")
                    options.links("http://developer.android.com/reference/")
                    options.tags = ['sample']
                    exclude '**/BuildConfig.java'
                    exclude '**/R.java'
                }
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')
        implementation "com.android.support:appcompat-v7:28.0.0"
        implementation "com.android.support:design:28.0.0"
        implementation "com.android.support:percent:28.0.0"
    }
}